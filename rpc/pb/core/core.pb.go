// Code generated by protoc-gen-go.
// source: core/core.proto
// DO NOT EDIT!

/*
Package core is a generated protocol buffer package.

It is generated from these files:
	core/core.proto

It has these top-level messages:
	Challenge
	ValidationRecord
	ProblemDetails
*/
package core

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type Challenge struct {
	Id                *int64              `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Type              *string             `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	Status            *string             `protobuf:"bytes,6,opt,name=status" json:"status,omitempty"`
	ValidatedTime     *string             `protobuf:"bytes,8,opt,name=validatedTime" json:"validatedTime,omitempty"`
	Uri               *string             `protobuf:"bytes,9,opt,name=uri" json:"uri,omitempty"`
	Token             *string             `protobuf:"bytes,3,opt,name=token" json:"token,omitempty"`
	AccountKey        *string             `protobuf:"bytes,4,opt,name=accountKey" json:"accountKey,omitempty"`
	KeyAuthorization  *string             `protobuf:"bytes,5,opt,name=keyAuthorization" json:"keyAuthorization,omitempty"`
	Validationrecords []*ValidationRecord `protobuf:"bytes,10,rep,name=validationrecords" json:"validationrecords,omitempty"`
	Error             *ProblemDetails     `protobuf:"bytes,7,opt,name=error" json:"error,omitempty"`
	XXX_unrecognized  []byte              `json:"-"`
}

func (m *Challenge) Reset()                    { *m = Challenge{} }
func (m *Challenge) String() string            { return proto.CompactTextString(m) }
func (*Challenge) ProtoMessage()               {}
func (*Challenge) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Challenge) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Challenge) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *Challenge) GetStatus() string {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return ""
}

func (m *Challenge) GetValidatedTime() string {
	if m != nil && m.ValidatedTime != nil {
		return *m.ValidatedTime
	}
	return ""
}

func (m *Challenge) GetUri() string {
	if m != nil && m.Uri != nil {
		return *m.Uri
	}
	return ""
}

func (m *Challenge) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

func (m *Challenge) GetAccountKey() string {
	if m != nil && m.AccountKey != nil {
		return *m.AccountKey
	}
	return ""
}

func (m *Challenge) GetKeyAuthorization() string {
	if m != nil && m.KeyAuthorization != nil {
		return *m.KeyAuthorization
	}
	return ""
}

func (m *Challenge) GetValidationrecords() []*ValidationRecord {
	if m != nil {
		return m.Validationrecords
	}
	return nil
}

func (m *Challenge) GetError() *ProblemDetails {
	if m != nil {
		return m.Error
	}
	return nil
}

type ValidationRecord struct {
	Hostname          *string  `protobuf:"bytes,1,opt,name=hostname" json:"hostname,omitempty"`
	Port              *string  `protobuf:"bytes,2,opt,name=port" json:"port,omitempty"`
	AddressesResolved []string `protobuf:"bytes,3,rep,name=addressesResolved" json:"addressesResolved,omitempty"`
	AddressUsed       *string  `protobuf:"bytes,4,opt,name=addressUsed" json:"addressUsed,omitempty"`
	Authorities       []string `protobuf:"bytes,5,rep,name=authorities" json:"authorities,omitempty"`
	Url               *string  `protobuf:"bytes,6,opt,name=url" json:"url,omitempty"`
	XXX_unrecognized  []byte   `json:"-"`
}

func (m *ValidationRecord) Reset()                    { *m = ValidationRecord{} }
func (m *ValidationRecord) String() string            { return proto.CompactTextString(m) }
func (*ValidationRecord) ProtoMessage()               {}
func (*ValidationRecord) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ValidationRecord) GetHostname() string {
	if m != nil && m.Hostname != nil {
		return *m.Hostname
	}
	return ""
}

func (m *ValidationRecord) GetPort() string {
	if m != nil && m.Port != nil {
		return *m.Port
	}
	return ""
}

func (m *ValidationRecord) GetAddressesResolved() []string {
	if m != nil {
		return m.AddressesResolved
	}
	return nil
}

func (m *ValidationRecord) GetAddressUsed() string {
	if m != nil && m.AddressUsed != nil {
		return *m.AddressUsed
	}
	return ""
}

func (m *ValidationRecord) GetAuthorities() []string {
	if m != nil {
		return m.Authorities
	}
	return nil
}

func (m *ValidationRecord) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

type ProblemDetails struct {
	ProblemType      *string `protobuf:"bytes,1,opt,name=problemType" json:"problemType,omitempty"`
	Detail           *string `protobuf:"bytes,2,opt,name=detail" json:"detail,omitempty"`
	HttpStatus       *int32  `protobuf:"varint,3,opt,name=httpStatus" json:"httpStatus,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ProblemDetails) Reset()                    { *m = ProblemDetails{} }
func (m *ProblemDetails) String() string            { return proto.CompactTextString(m) }
func (*ProblemDetails) ProtoMessage()               {}
func (*ProblemDetails) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ProblemDetails) GetProblemType() string {
	if m != nil && m.ProblemType != nil {
		return *m.ProblemType
	}
	return ""
}

func (m *ProblemDetails) GetDetail() string {
	if m != nil && m.Detail != nil {
		return *m.Detail
	}
	return ""
}

func (m *ProblemDetails) GetHttpStatus() int32 {
	if m != nil && m.HttpStatus != nil {
		return *m.HttpStatus
	}
	return 0
}

func init() {
	proto.RegisterType((*Challenge)(nil), "core.Challenge")
	proto.RegisterType((*ValidationRecord)(nil), "core.ValidationRecord")
	proto.RegisterType((*ProblemDetails)(nil), "core.ProblemDetails")
}

var fileDescriptor0 = []byte{
	// 378 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x64, 0x92, 0x4f, 0x6e, 0xea, 0x30,
	0x10, 0xc6, 0x15, 0x42, 0x78, 0x30, 0xe8, 0xf1, 0xc0, 0x42, 0xc8, 0x7a, 0x8b, 0x0a, 0xa1, 0x2e,
	0x50, 0x55, 0x51, 0x89, 0x1b, 0x54, 0x65, 0xd7, 0x4d, 0x95, 0xd2, 0xee, 0x5d, 0x3c, 0x6a, 0x5c,
	0x42, 0x1c, 0xd9, 0x0e, 0x12, 0x3d, 0x60, 0x2f, 0xd0, 0x0b, 0xd5, 0x7f, 0x52, 0x1a, 0xca, 0x26,
	0x9a, 0xf9, 0xcd, 0x17, 0xdb, 0xf3, 0xcd, 0xc0, 0xbf, 0x8d, 0x54, 0x78, 0xe3, 0x3e, 0x8b, 0x52,
	0x49, 0x23, 0x49, 0xdb, 0xc5, 0xb3, 0xcf, 0x16, 0xf4, 0xee, 0x32, 0x96, 0xe7, 0x58, 0xbc, 0x22,
	0x19, 0x40, 0x4b, 0x70, 0x1a, 0x4d, 0xa3, 0x79, 0x9c, 0xda, 0x88, 0x10, 0x68, 0x9b, 0x43, 0x89,
	0xb4, 0x65, 0x49, 0x2f, 0xf5, 0x31, 0x99, 0x40, 0x47, 0x1b, 0x66, 0x2a, 0x4d, 0x3b, 0x9e, 0xd6,
	0x19, 0xb9, 0x84, 0xbf, 0x7b, 0x96, 0x0b, 0xce, 0x0c, 0xf2, 0xb5, 0xd8, 0x21, 0xed, 0xfa, 0xf2,
	0x29, 0x24, 0x43, 0x88, 0x2b, 0x25, 0x68, 0xcf, 0xd7, 0x5c, 0x48, 0xc6, 0x90, 0x18, 0xb9, 0xc5,
	0x82, 0xc6, 0x9e, 0x85, 0x84, 0x5c, 0x00, 0xb0, 0xcd, 0x46, 0x56, 0x85, 0xb9, 0xc7, 0x03, 0x6d,
	0xfb, 0x52, 0x83, 0x90, 0x2b, 0x18, 0x6e, 0xf1, 0x70, 0x5b, 0x99, 0x4c, 0x2a, 0xf1, 0xce, 0x8c,
	0x90, 0x05, 0x4d, 0xbc, 0xea, 0x8c, 0x93, 0x15, 0x8c, 0xea, 0x47, 0xd8, 0x4c, 0xa1, 0xed, 0x9b,
	0x6b, 0x0a, 0xd3, 0x78, 0xde, 0x5f, 0x4e, 0x16, 0xde, 0x91, 0xe7, 0x63, 0x39, 0xf5, 0xe5, 0xf4,
	0xfc, 0x07, 0x7b, 0x63, 0x82, 0x4a, 0x49, 0x45, 0xff, 0xd8, 0x6b, 0xfa, 0xcb, 0x71, 0xf8, 0xf3,
	0x41, 0xc9, 0x97, 0x1c, 0x77, 0x2b, 0x34, 0x4c, 0xe4, 0x3a, 0x0d, 0x92, 0xd9, 0x47, 0x04, 0xc3,
	0xdf, 0x67, 0x92, 0xff, 0xd0, 0xcd, 0xa4, 0x36, 0x05, 0xb3, 0xde, 0x44, 0xfe, 0xa9, 0xc7, 0xdc,
	0x19, 0x5d, 0x4a, 0x65, 0xbe, 0x8d, 0x76, 0x31, 0xb9, 0x86, 0x11, 0xe3, 0x5c, 0xa1, 0xd6, 0xa8,
	0x53, 0xd4, 0x32, 0xdf, 0x23, 0xb7, 0x26, 0xc5, 0x56, 0x70, 0x5e, 0x20, 0x53, 0xe8, 0xd7, 0xf0,
	0x49, 0x5b, 0x5d, 0x70, 0xac, 0x89, 0xbc, 0x22, 0xf8, 0x62, 0x04, 0x6a, 0xeb, 0x56, 0xec, 0x15,
	0x3f, 0x28, 0x0c, 0x27, 0xaf, 0xe7, 0xea, 0xc2, 0xd9, 0x1b, 0x0c, 0x4e, 0x3b, 0x74, 0xa7, 0x94,
	0x81, 0xac, 0xdd, 0x66, 0x84, 0x46, 0x9a, 0xc8, 0x2d, 0x08, 0xf7, 0xe2, 0xba, 0x9b, 0x3a, 0x73,
	0x23, 0xcd, 0x8c, 0x29, 0x1f, 0xc3, 0xf2, 0xb8, 0x69, 0x27, 0x69, 0x83, 0x7c, 0x05, 0x00, 0x00,
	0xff, 0xff, 0x74, 0xdf, 0x93, 0xfb, 0xa2, 0x02, 0x00, 0x00,
}
