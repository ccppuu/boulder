// Code generated by protoc-gen-go.
// source: core/core.proto
// DO NOT EDIT!

/*
Package core is a generated protocol buffer package.

It is generated from these files:
	core/core.proto

It has these top-level messages:
	Challenge
	ValidationRecord
	ProblemDetails
*/
package core

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type Challenge struct {
	Id                *int64              `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Type              *string             `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	Status            *string             `protobuf:"bytes,6,opt,name=status" json:"status,omitempty"`
	ValidatedTime     *string             `protobuf:"bytes,8,opt,name=validatedTime" json:"validatedTime,omitempty"`
	Uri               *string             `protobuf:"bytes,9,opt,name=uri" json:"uri,omitempty"`
	Token             *string             `protobuf:"bytes,3,opt,name=token" json:"token,omitempty"`
	AccountKey        *string             `protobuf:"bytes,4,opt,name=accountKey" json:"accountKey,omitempty"`
	KeyAuthorization  *string             `protobuf:"bytes,5,opt,name=keyAuthorization" json:"keyAuthorization,omitempty"`
	Validationrecords []*ValidationRecord `protobuf:"bytes,10,rep,name=validationrecords" json:"validationrecords,omitempty"`
	Error             *ProblemDetails     `protobuf:"bytes,7,opt,name=error" json:"error,omitempty"`
	XXX_unrecognized  []byte              `json:"-"`
}

func (m *Challenge) Reset()                    { *m = Challenge{} }
func (m *Challenge) String() string            { return proto.CompactTextString(m) }
func (*Challenge) ProtoMessage()               {}
func (*Challenge) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Challenge) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Challenge) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *Challenge) GetStatus() string {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return ""
}

func (m *Challenge) GetValidatedTime() string {
	if m != nil && m.ValidatedTime != nil {
		return *m.ValidatedTime
	}
	return ""
}

func (m *Challenge) GetUri() string {
	if m != nil && m.Uri != nil {
		return *m.Uri
	}
	return ""
}

func (m *Challenge) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

func (m *Challenge) GetAccountKey() string {
	if m != nil && m.AccountKey != nil {
		return *m.AccountKey
	}
	return ""
}

func (m *Challenge) GetKeyAuthorization() string {
	if m != nil && m.KeyAuthorization != nil {
		return *m.KeyAuthorization
	}
	return ""
}

func (m *Challenge) GetValidationrecords() []*ValidationRecord {
	if m != nil {
		return m.Validationrecords
	}
	return nil
}

func (m *Challenge) GetError() *ProblemDetails {
	if m != nil {
		return m.Error
	}
	return nil
}

type ValidationRecord struct {
	Hostname          *string  `protobuf:"bytes,1,opt,name=hostname" json:"hostname,omitempty"`
	Port              *string  `protobuf:"bytes,2,opt,name=port" json:"port,omitempty"`
	AddressesResolved []string `protobuf:"bytes,3,rep,name=addressesResolved" json:"addressesResolved,omitempty"`
	AddressUsed       *string  `protobuf:"bytes,4,opt,name=addressUsed" json:"addressUsed,omitempty"`
	Authorities       []string `protobuf:"bytes,5,rep,name=authorities" json:"authorities,omitempty"`
	Url               *string  `protobuf:"bytes,6,opt,name=url" json:"url,omitempty"`
	XXX_unrecognized  []byte   `json:"-"`
}

func (m *ValidationRecord) Reset()                    { *m = ValidationRecord{} }
func (m *ValidationRecord) String() string            { return proto.CompactTextString(m) }
func (*ValidationRecord) ProtoMessage()               {}
func (*ValidationRecord) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ValidationRecord) GetHostname() string {
	if m != nil && m.Hostname != nil {
		return *m.Hostname
	}
	return ""
}

func (m *ValidationRecord) GetPort() string {
	if m != nil && m.Port != nil {
		return *m.Port
	}
	return ""
}

func (m *ValidationRecord) GetAddressesResolved() []string {
	if m != nil {
		return m.AddressesResolved
	}
	return nil
}

func (m *ValidationRecord) GetAddressUsed() string {
	if m != nil && m.AddressUsed != nil {
		return *m.AddressUsed
	}
	return ""
}

func (m *ValidationRecord) GetAuthorities() []string {
	if m != nil {
		return m.Authorities
	}
	return nil
}

func (m *ValidationRecord) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

type ProblemDetails struct {
	ProblemType      *string `protobuf:"bytes,1,opt,name=problemType" json:"problemType,omitempty"`
	Detail           *string `protobuf:"bytes,2,opt,name=detail" json:"detail,omitempty"`
	HttpStatus       *int32  `protobuf:"varint,3,opt,name=httpStatus" json:"httpStatus,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ProblemDetails) Reset()                    { *m = ProblemDetails{} }
func (m *ProblemDetails) String() string            { return proto.CompactTextString(m) }
func (*ProblemDetails) ProtoMessage()               {}
func (*ProblemDetails) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ProblemDetails) GetProblemType() string {
	if m != nil && m.ProblemType != nil {
		return *m.ProblemType
	}
	return ""
}

func (m *ProblemDetails) GetDetail() string {
	if m != nil && m.Detail != nil {
		return *m.Detail
	}
	return ""
}

func (m *ProblemDetails) GetHttpStatus() int32 {
	if m != nil && m.HttpStatus != nil {
		return *m.HttpStatus
	}
	return 0
}

func init() {
	proto.RegisterType((*Challenge)(nil), "core.Challenge")
	proto.RegisterType((*ValidationRecord)(nil), "core.ValidationRecord")
	proto.RegisterType((*ProblemDetails)(nil), "core.ProblemDetails")
}

var fileDescriptor0 = []byte{
	// 327 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x64, 0x91, 0xcf, 0x4e, 0xf2, 0x40,
	0x14, 0xc5, 0x53, 0x4a, 0xf9, 0xe0, 0xf6, 0x03, 0xa1, 0xfe, 0xc9, 0xb8, 0x23, 0xb8, 0x61, 0x85,
	0x91, 0x37, 0x30, 0xba, 0x31, 0x6e, 0x0c, 0xa2, 0xfb, 0x91, 0xb9, 0xb1, 0x13, 0x86, 0x4e, 0x33,
	0x73, 0x4b, 0x82, 0x6b, 0x9f, 0xd7, 0x67, 0xf0, 0x76, 0x5a, 0x4c, 0x8c, 0x9b, 0xa6, 0xe7, 0x9c,
	0xce, 0xdc, 0xfb, 0x3b, 0x85, 0x93, 0x8d, 0x75, 0x78, 0x5d, 0x3f, 0x16, 0xa5, 0xb3, 0x64, 0xb3,
	0x6e, 0xfd, 0x3e, 0xfb, 0x8a, 0x60, 0x70, 0x97, 0x4b, 0x63, 0xb0, 0x78, 0xc7, 0x0c, 0xa0, 0xa3,
	0x95, 0x88, 0xa6, 0xd1, 0x3c, 0xce, 0xfe, 0x43, 0x97, 0x0e, 0x25, 0x8a, 0x0e, 0xab, 0x41, 0x36,
	0x82, 0x9e, 0x27, 0x49, 0x95, 0x17, 0xbd, 0xa0, 0xcf, 0x61, 0xb8, 0x97, 0x46, 0x2b, 0x49, 0xa8,
	0xd6, 0x7a, 0x87, 0xa2, 0x1f, 0xec, 0x14, 0xe2, 0xca, 0x69, 0x31, 0x08, 0x62, 0x08, 0x09, 0xd9,
	0x2d, 0x16, 0x22, 0x0e, 0x92, 0x6f, 0x97, 0x9b, 0x8d, 0xad, 0x0a, 0x7a, 0xc4, 0x83, 0xe8, 0x06,
	0x4f, 0xc0, 0x78, 0x8b, 0x87, 0xdb, 0x8a, 0x72, 0xeb, 0xf4, 0x87, 0x24, 0x6d, 0x0b, 0x91, 0x84,
	0xe4, 0x06, 0x26, 0xed, 0x00, 0xf6, 0x1c, 0xf2, 0xb2, 0xca, 0x0b, 0x98, 0xc6, 0xf3, 0x74, 0x79,
	0xb1, 0x08, 0x18, 0xaf, 0x3f, 0xf1, 0x2a, 0xc4, 0xd9, 0x15, 0x24, 0xe8, 0x9c, 0x75, 0xe2, 0x1f,
	0xdf, 0x90, 0x2e, 0xcf, 0x9a, 0xcf, 0x9e, 0x9c, 0x7d, 0x33, 0xb8, 0xbb, 0x47, 0x92, 0xda, 0xf8,
	0xd9, 0x67, 0x04, 0xe3, 0x3f, 0x27, 0xc7, 0xd0, 0xcf, 0xad, 0xa7, 0x42, 0x32, 0x48, 0x14, 0xc6,
	0x33, 0x7d, 0x69, 0x1d, 0xb5, 0xf4, 0x97, 0x30, 0x91, 0x4a, 0x39, 0xf4, 0x1e, 0xfd, 0x0a, 0xbd,
	0x35, 0x7b, 0x54, 0x4c, 0x15, 0x73, 0x74, 0x0a, 0x69, 0x1b, 0xbd, 0x78, 0x36, 0x1b, 0xac, 0xda,
	0x6c, 0x98, 0x48, 0xa3, 0x67, 0xa2, 0xf8, 0xd8, 0x8d, 0x69, 0xfa, 0x9b, 0x3d, 0xc0, 0xe8, 0xf7,
	0x62, 0xf5, 0x99, 0xb2, 0x71, 0xd6, 0x75, 0xed, 0xd1, 0xb1, 0x76, 0x15, 0xf2, 0x76, 0x11, 0xee,
	0x30, 0x27, 0x2a, 0x9f, 0x9b, 0x5f, 0x51, 0xf7, 0x9a, 0x7c, 0x07, 0x00, 0x00, 0xff, 0xff, 0x87,
	0xb3, 0x53, 0x27, 0xda, 0x01, 0x00, 0x00,
}
